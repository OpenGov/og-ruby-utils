# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/concurrent-ruby-ext/all/concurrent-ruby-ext.rbi
#
# concurrent-ruby-ext-1.0.4
class Concurrent::CAtomicReference
  def _compare_and_set(arg0, arg1); end
  def get; end
  def get_and_set(arg0); end
  def initialize(*arg0); end
  def set(arg0); end
  def swap(arg0); end
  def value; end
  def value=(arg0); end
end
class Concurrent::CAtomicBoolean
  def false?; end
  def initialize(*arg0); end
  def make_false; end
  def make_true; end
  def true?; end
  def value; end
  def value=(arg0); end
end
class Concurrent::CAtomicFixnum
  def compare_and_set(arg0, arg1); end
  def decrement(*arg0); end
  def down(*arg0); end
  def increment(*arg0); end
  def initialize(*arg0); end
  def up(*arg0); end
  def update; end
  def value; end
  def value=(arg0); end
end
module Concurrent
end
class Concurrent::ConcurrentUpdateError < ThreadError
end
module Concurrent::AtomicDirectUpdate
  def try_update!; end
  def try_update; end
  def update; end
end
module Concurrent::AtomicNumericCompareAndSetWrapper
  def compare_and_set(old_value, new_value); end
  def compare_and_swap(old_value, new_value); end
end
